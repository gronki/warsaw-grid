/****************************************************
 ****************** WARSAW GRID *********************
 ****************************************************
 *   Yet another (probably useless) grid system     *
 *                written in SASS.                  *
 *      (If you don't like it, don't use it.)       *
 ****************************************************
 *     Copyright (c) 2017 Dominik Gronkiewicz       *
 *              All rights reserved.                *
 * Distributed under MIT license (see LICENSE file) *
 *      http://github.com/gronki/warsaw-grid        *
 ****************************************************
 ****************************************************
 */

@import "respond"

// this can be changed to any values that suit you
$gutter:        3%      !default
$grid-base:     12      !default
$body-width:    80rem   !default

.container
    margin-left:    auto
    margin-right:   auto
    padding-left:   $gutter / 2
    padding-right:  $gutter / 2
    max-width:      $body-width

.row
    display:        flex
    flex-wrap:      wrap
    margin-left:    -$gutter / 2
    margin-right:   -$gutter / 2
    .col
        margin-left:    $gutter / 2
        margin-right:   $gutter / 2

    // iterate through all screen sizes
    @each $bp in map-keys($breakpoints)
        // first, extend the .col class so we get the basic properties
        @for $i from 1 through $grid-base
            .col-#{$bp}-#{$i}
                @extend .col
        // second, for a given screen size...
        +breakpoint($bp)
            // ..set column widths
            @for $i from 1 through $grid-base
                .col-#{$bp}-#{$i}
                    width: percentage($i / $grid-base) - $gutter
                .#{$bp}-off-#{$i}
                    margin-left: percentage($i / $grid-base) + $gutter/2

    // generate the "default" col-N classes
    @for $i from 1 through $grid-base
        .col-#{$i}
            @extend .col-#{$breakpoint-uncollapse}-#{$i}

// this causes the given div to behave like a column of width $g
// starting from size $bp
=column($g, $bp: $breakpoint-uncollapse)
    @if $g > $grid-base
        @warn "Given width " + $g + " exceeds the maximum of " + $grid-base + ". The column width trimmed to " + $grid-base + "."
        @extend .col-#{$bp}-#{$grid-base}
    @else
        @extend .col-#{$bp}-#{$g}
